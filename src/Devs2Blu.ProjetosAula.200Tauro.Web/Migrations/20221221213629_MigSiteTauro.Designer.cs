// <auto-generated />
using System;
using Devs2Blu.ProjetosAula._200Tauro.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Devs2Blu.ProjetosAula._200Tauro.Web.Migrations
{
    [DbContext(typeof(ContextoDatabase))]
    [Migration("20221221213629_MigSiteTauro")]
    partial class MigSiteTauro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Camisa"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Calça"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Calçado"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Casaco"
                        });
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.ConfiguracaoSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracaoSistema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contato = "200Tauro@gmail.com",
                            Endereco = "Rua Bahia 21345",
                            NomeSite = "200Tauro"
                        });
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit")
                        .HasColumnName("IsPublished");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("conteudo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            CreatedDate = new DateTime(2022, 12, 21, 18, 36, 29, 113, DateTimeKind.Local).AddTicks(9585),
                            Descricao = "Camisa para corrida",
                            IsDeleted = false,
                            IsPublished = true,
                            Titulo = "Camiseta Adidas"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            CreatedDate = new DateTime(2022, 12, 21, 18, 36, 29, 113, DateTimeKind.Local).AddTicks(9593),
                            Descricao = "Calça para corrida",
                            IsDeleted = false,
                            IsPublished = true,
                            Titulo = "Calça Tactel"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            CreatedDate = new DateTime(2022, 12, 21, 18, 36, 29, 113, DateTimeKind.Local).AddTicks(9594),
                            Descricao = "Tênis para caminhada",
                            IsDeleted = false,
                            IsPublished = true,
                            Titulo = "Nike Shock"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 4,
                            CreatedDate = new DateTime(2022, 12, 21, 18, 36, 29, 113, DateTimeKind.Local).AddTicks(9594),
                            Descricao = "Casaco térmico",
                            IsDeleted = false,
                            IsPublished = true,
                            Titulo = "Casaco Adidas"
                        });
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConteudoId")
                        .HasColumnType("int");

                    b.Property<string>("EnderecoImagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.ToTable("Imagem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConteudoId = 1,
                            EnderecoImagem = "https://img.elo7.com.br/product/original/17B1547/camisa-sublimacao-poliester.jpg"
                        },
                        new
                        {
                            Id = 2,
                            ConteudoId = 2,
                            EnderecoImagem = "https://www.invictus.com.br/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/l/e/legion-azul-frente.jpg"
                        },
                        new
                        {
                            Id = 3,
                            ConteudoId = 3,
                            EnderecoImagem = "https://laranjeiras.vteximg.com.br/arquivos/ids/164819/sapato-tip-toye.png?v=637265382501400000"
                        },
                        new
                        {
                            Id = 4,
                            ConteudoId = 4,
                            EnderecoImagem = "https://cf.shopee.com.br/file/f17747dd62386f0febadf6f1418480fa"
                        });
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Newsletter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Newsletter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Email = "patrick.weber@gmail.com",
                            Nome = "Patrick Weber"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Email = "gustavo.soares@gmail.com",
                            Nome = "Gustavo Soares"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Email = "pedro.godri@gmail.com",
                            Nome = "Pedro Godri"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Email = "alexandre.schwanke",
                            Nome = "Alexandre Schwanke"
                        });
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Conteudo", b =>
                {
                    b.HasOne("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Categoria", "Categoria")
                        .WithMany("Conteudos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Imagem", b =>
                {
                    b.HasOne("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Conteudo", "Conteudo")
                        .WithMany("Imagens")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conteudo");
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Categoria", b =>
                {
                    b.Navigation("Conteudos");
                });

            modelBuilder.Entity("Devs2Blu.ProjetosAula._200Tauro.Web.Models.Entities.Conteudo", b =>
                {
                    b.Navigation("Imagens");
                });
#pragma warning restore 612, 618
        }
    }
}
